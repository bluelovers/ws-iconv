// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`hasOwnProperty default 1`] = `true`;

exports[`hasOwnProperty posix 1`] = `true`;

exports[`hasOwnProperty upath 1`] = `true`;

exports[`hasOwnProperty win32 1`] = `true`;

exports[`posix 1`] = `
PathWrap {
  "default": PathWrap {
    "PathWrap": [Function],
    "default": [Circular],
    "fn": PathWrap {
      "_makeLong": [Function],
      "delimiter": ";",
      "filterNameEntry": [Function],
      "fn": PathWrap {
        "basename": [Function],
        "constructor": [Function],
        "dirname": [Function],
        "extname": [Function],
        "fn": [Circular],
        "format": [Function],
        "isAbsolute": [Function],
        "join": [Function],
        "normalize": [Function],
        "parse": [Function],
        "relative": [Function],
        "resolve": [Function],
        "sep": "/",
      },
      "sep": "/",
      "toNamespacedPath": [Function],
      "vaildNameEntry": [Function],
    },
    "name": "upath",
    "posix": [Circular],
    "sep": "/",
    "upath": [Circular],
    "win32": PathWrap {
      "default": [Circular],
      "fn": PathWrap {
        "_makeLong": [Function],
        "delimiter": ";",
        "filterNameEntry": [Function],
        "fn": PathWrap {
          "basename": [Function],
          "constructor": [Function],
          "dirname": [Function],
          "extname": [Function],
          "fn": [Circular],
          "format": [Function],
          "isAbsolute": [Function],
          "join": [Function],
          "normalize": [Function],
          "parse": [Function],
          "relative": [Function],
          "resolve": [Function],
          "sep": "/",
        },
        "sep": "/",
        "toNamespacedPath": [Function],
        "vaildNameEntry": [Function],
      },
      "name": "win32",
      "posix": [Circular],
      "sep": "/",
      "upath": [Circular],
      "win32": [Circular],
    },
  },
  "fn": PathWrap {
    "_makeLong": [Function],
    "delimiter": ";",
    "filterNameEntry": [Function],
    "fn": PathWrap {
      "basename": [Function],
      "constructor": [Function],
      "dirname": [Function],
      "extname": [Function],
      "fn": [Circular],
      "format": [Function],
      "isAbsolute": [Function],
      "join": [Function],
      "normalize": [Function],
      "parse": [Function],
      "relative": [Function],
      "resolve": [Function],
      "sep": "/",
    },
    "sep": "/",
    "toNamespacedPath": [Function],
    "vaildNameEntry": [Function],
  },
  "name": "posix",
  "posix": [Circular],
  "sep": "/",
  "upath": PathWrap {
    "PathWrap": [Function],
    "default": [Circular],
    "fn": PathWrap {
      "_makeLong": [Function],
      "delimiter": ";",
      "filterNameEntry": [Function],
      "fn": PathWrap {
        "basename": [Function],
        "constructor": [Function],
        "dirname": [Function],
        "extname": [Function],
        "fn": [Circular],
        "format": [Function],
        "isAbsolute": [Function],
        "join": [Function],
        "normalize": [Function],
        "parse": [Function],
        "relative": [Function],
        "resolve": [Function],
        "sep": "/",
      },
      "sep": "/",
      "toNamespacedPath": [Function],
      "vaildNameEntry": [Function],
    },
    "name": "upath",
    "posix": [Circular],
    "sep": "/",
    "upath": [Circular],
    "win32": PathWrap {
      "default": [Circular],
      "fn": PathWrap {
        "_makeLong": [Function],
        "delimiter": ";",
        "filterNameEntry": [Function],
        "fn": PathWrap {
          "basename": [Function],
          "constructor": [Function],
          "dirname": [Function],
          "extname": [Function],
          "fn": [Circular],
          "format": [Function],
          "isAbsolute": [Function],
          "join": [Function],
          "normalize": [Function],
          "parse": [Function],
          "relative": [Function],
          "resolve": [Function],
          "sep": "/",
        },
        "sep": "/",
        "toNamespacedPath": [Function],
        "vaildNameEntry": [Function],
      },
      "name": "win32",
      "posix": [Circular],
      "sep": "/",
      "upath": [Circular],
      "win32": [Circular],
    },
  },
  "win32": PathWrap {
    "default": PathWrap {
      "PathWrap": [Function],
      "default": [Circular],
      "fn": PathWrap {
        "_makeLong": [Function],
        "delimiter": ";",
        "filterNameEntry": [Function],
        "fn": PathWrap {
          "basename": [Function],
          "constructor": [Function],
          "dirname": [Function],
          "extname": [Function],
          "fn": [Circular],
          "format": [Function],
          "isAbsolute": [Function],
          "join": [Function],
          "normalize": [Function],
          "parse": [Function],
          "relative": [Function],
          "resolve": [Function],
          "sep": "/",
        },
        "sep": "/",
        "toNamespacedPath": [Function],
        "vaildNameEntry": [Function],
      },
      "name": "upath",
      "posix": [Circular],
      "sep": "/",
      "upath": [Circular],
      "win32": [Circular],
    },
    "fn": PathWrap {
      "_makeLong": [Function],
      "delimiter": ";",
      "filterNameEntry": [Function],
      "fn": PathWrap {
        "basename": [Function],
        "constructor": [Function],
        "dirname": [Function],
        "extname": [Function],
        "fn": [Circular],
        "format": [Function],
        "isAbsolute": [Function],
        "join": [Function],
        "normalize": [Function],
        "parse": [Function],
        "relative": [Function],
        "resolve": [Function],
        "sep": "/",
      },
      "sep": "/",
      "toNamespacedPath": [Function],
      "vaildNameEntry": [Function],
    },
    "name": "win32",
    "posix": [Circular],
    "sep": "/",
    "upath": PathWrap {
      "PathWrap": [Function],
      "default": [Circular],
      "fn": PathWrap {
        "_makeLong": [Function],
        "delimiter": ";",
        "filterNameEntry": [Function],
        "fn": PathWrap {
          "basename": [Function],
          "constructor": [Function],
          "dirname": [Function],
          "extname": [Function],
          "fn": [Circular],
          "format": [Function],
          "isAbsolute": [Function],
          "join": [Function],
          "normalize": [Function],
          "parse": [Function],
          "relative": [Function],
          "resolve": [Function],
          "sep": "/",
        },
        "sep": "/",
        "toNamespacedPath": [Function],
        "vaildNameEntry": [Function],
      },
      "name": "upath",
      "posix": [Circular],
      "sep": "/",
      "upath": [Circular],
      "win32": [Circular],
    },
    "win32": [Circular],
  },
}
`;

exports[`posix 2`] = `
Array [
  "sep",
  "name",
  "fn",
  "win32",
  "posix",
  "upath",
  "default",
]
`;

exports[`win32 1`] = `
PathWrap {
  "default": PathWrap {
    "PathWrap": [Function],
    "default": [Circular],
    "fn": PathWrap {
      "_makeLong": [Function],
      "delimiter": ";",
      "filterNameEntry": [Function],
      "fn": PathWrap {
        "basename": [Function],
        "constructor": [Function],
        "dirname": [Function],
        "extname": [Function],
        "fn": [Circular],
        "format": [Function],
        "isAbsolute": [Function],
        "join": [Function],
        "normalize": [Function],
        "parse": [Function],
        "relative": [Function],
        "resolve": [Function],
        "sep": "/",
      },
      "sep": "/",
      "toNamespacedPath": [Function],
      "vaildNameEntry": [Function],
    },
    "name": "upath",
    "posix": PathWrap {
      "default": [Circular],
      "fn": PathWrap {
        "_makeLong": [Function],
        "delimiter": ";",
        "filterNameEntry": [Function],
        "fn": PathWrap {
          "basename": [Function],
          "constructor": [Function],
          "dirname": [Function],
          "extname": [Function],
          "fn": [Circular],
          "format": [Function],
          "isAbsolute": [Function],
          "join": [Function],
          "normalize": [Function],
          "parse": [Function],
          "relative": [Function],
          "resolve": [Function],
          "sep": "/",
        },
        "sep": "/",
        "toNamespacedPath": [Function],
        "vaildNameEntry": [Function],
      },
      "name": "posix",
      "posix": [Circular],
      "sep": "/",
      "upath": [Circular],
      "win32": [Circular],
    },
    "sep": "/",
    "upath": [Circular],
    "win32": [Circular],
  },
  "fn": PathWrap {
    "_makeLong": [Function],
    "delimiter": ";",
    "filterNameEntry": [Function],
    "fn": PathWrap {
      "basename": [Function],
      "constructor": [Function],
      "dirname": [Function],
      "extname": [Function],
      "fn": [Circular],
      "format": [Function],
      "isAbsolute": [Function],
      "join": [Function],
      "normalize": [Function],
      "parse": [Function],
      "relative": [Function],
      "resolve": [Function],
      "sep": "/",
    },
    "sep": "/",
    "toNamespacedPath": [Function],
    "vaildNameEntry": [Function],
  },
  "name": "win32",
  "posix": PathWrap {
    "default": PathWrap {
      "PathWrap": [Function],
      "default": [Circular],
      "fn": PathWrap {
        "_makeLong": [Function],
        "delimiter": ";",
        "filterNameEntry": [Function],
        "fn": PathWrap {
          "basename": [Function],
          "constructor": [Function],
          "dirname": [Function],
          "extname": [Function],
          "fn": [Circular],
          "format": [Function],
          "isAbsolute": [Function],
          "join": [Function],
          "normalize": [Function],
          "parse": [Function],
          "relative": [Function],
          "resolve": [Function],
          "sep": "/",
        },
        "sep": "/",
        "toNamespacedPath": [Function],
        "vaildNameEntry": [Function],
      },
      "name": "upath",
      "posix": [Circular],
      "sep": "/",
      "upath": [Circular],
      "win32": [Circular],
    },
    "fn": PathWrap {
      "_makeLong": [Function],
      "delimiter": ";",
      "filterNameEntry": [Function],
      "fn": PathWrap {
        "basename": [Function],
        "constructor": [Function],
        "dirname": [Function],
        "extname": [Function],
        "fn": [Circular],
        "format": [Function],
        "isAbsolute": [Function],
        "join": [Function],
        "normalize": [Function],
        "parse": [Function],
        "relative": [Function],
        "resolve": [Function],
        "sep": "/",
      },
      "sep": "/",
      "toNamespacedPath": [Function],
      "vaildNameEntry": [Function],
    },
    "name": "posix",
    "posix": [Circular],
    "sep": "/",
    "upath": PathWrap {
      "PathWrap": [Function],
      "default": [Circular],
      "fn": PathWrap {
        "_makeLong": [Function],
        "delimiter": ";",
        "filterNameEntry": [Function],
        "fn": PathWrap {
          "basename": [Function],
          "constructor": [Function],
          "dirname": [Function],
          "extname": [Function],
          "fn": [Circular],
          "format": [Function],
          "isAbsolute": [Function],
          "join": [Function],
          "normalize": [Function],
          "parse": [Function],
          "relative": [Function],
          "resolve": [Function],
          "sep": "/",
        },
        "sep": "/",
        "toNamespacedPath": [Function],
        "vaildNameEntry": [Function],
      },
      "name": "upath",
      "posix": [Circular],
      "sep": "/",
      "upath": [Circular],
      "win32": [Circular],
    },
    "win32": [Circular],
  },
  "sep": "/",
  "upath": PathWrap {
    "PathWrap": [Function],
    "default": [Circular],
    "fn": PathWrap {
      "_makeLong": [Function],
      "delimiter": ";",
      "filterNameEntry": [Function],
      "fn": PathWrap {
        "basename": [Function],
        "constructor": [Function],
        "dirname": [Function],
        "extname": [Function],
        "fn": [Circular],
        "format": [Function],
        "isAbsolute": [Function],
        "join": [Function],
        "normalize": [Function],
        "parse": [Function],
        "relative": [Function],
        "resolve": [Function],
        "sep": "/",
      },
      "sep": "/",
      "toNamespacedPath": [Function],
      "vaildNameEntry": [Function],
    },
    "name": "upath",
    "posix": PathWrap {
      "default": [Circular],
      "fn": PathWrap {
        "_makeLong": [Function],
        "delimiter": ";",
        "filterNameEntry": [Function],
        "fn": PathWrap {
          "basename": [Function],
          "constructor": [Function],
          "dirname": [Function],
          "extname": [Function],
          "fn": [Circular],
          "format": [Function],
          "isAbsolute": [Function],
          "join": [Function],
          "normalize": [Function],
          "parse": [Function],
          "relative": [Function],
          "resolve": [Function],
          "sep": "/",
        },
        "sep": "/",
        "toNamespacedPath": [Function],
        "vaildNameEntry": [Function],
      },
      "name": "posix",
      "posix": [Circular],
      "sep": "/",
      "upath": [Circular],
      "win32": [Circular],
    },
    "sep": "/",
    "upath": [Circular],
    "win32": [Circular],
  },
  "win32": [Circular],
}
`;

exports[`win32 2`] = `
Array [
  "sep",
  "name",
  "fn",
  "win32",
  "posix",
  "upath",
  "default",
]
`;
